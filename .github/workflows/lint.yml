name: lint

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'backend/**'
      - '.github/workflows/lint.yml'

permissions:
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect changed services
        id: set-matrix
        run: |
          all_services=$(find backend/services -maxdepth 1 -type d -not -path backend/services | sed 's|backend/services/||' | sort)
          echo "All services: $all_services"

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            base_sha="${{ github.event.pull_request.base.sha }}"
            head_sha="${{ github.event.pull_request.head.sha }}"
          else
            base_sha="${{ github.event.before }}"
            head_sha="${{ github.sha }}"
          fi

          changed_files=$(git diff --name-only $base_sha..$head_sha)
          echo "Changed files:"
          echo "$changed_files"

          gen_changed=false
          if echo "$changed_files" | grep -E '^backend/(gen|proto)/' > /dev/null; then
            gen_changed=true
            echo "Gen/proto files changed - will check all services"
          fi

          changed_services=""
          for service in $all_services; do
            if [ "$gen_changed" = "true" ] || echo "$changed_files" | grep -E "^backend/services/$service/" > /dev/null; then
              if [ -z "$changed_services" ]; then
                changed_services="\"$service\""
              else
                changed_services="$changed_services,\"$service\""
              fi
              echo "Service $service will be linted"
            fi
          done

          if [ -z "$changed_services" ]; then
            matrix='{"service":[]}'
          else
            matrix="{\"service\":[$changed_services]}"
          fi

          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "Final matrix: $matrix"
  lint-services:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.matrix != '{"service":[]}' }}
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.60.3
      - name: Prepare Go workspace
        working-directory: backend
        run: |
          go work sync || true
      - name: Lint ${{ matrix.service }} service
        working-directory: backend
        run: |
          golangci-lint run --timeout=5m --skip-dirs '(?i)internal/swagger|^gen($|/)' ./services/${{ matrix.service }}/...
